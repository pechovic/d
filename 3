#!/bin/bash

# List of branches to protect
PROTECTED_BRANCHES_REGEX="^(release/.*)$"

# Function to check if a commit is part of a pull request
is_commit_part_of_pull_request() {
  local commit=$1
  local branch=$2

  # Use Bitbucket API to check if the commit is part of a merged pull request
  # Replace the following with actual Bitbucket API usage for your setup
  # Example: using a REST API to query pull requests
  local result=$(curl -s -u "$BITBUCKET_USER:$BITBUCKET_TOKEN" \
    "http://<BITBUCKET_SERVER>/rest/api/1.0/projects/<PROJECT_KEY>/repos/<REPO_SLUG>/pull-requests?state=MERGED&limit=1000" |
    jq ".values[] | select(.toRef.displayId == \"$branch\") | .commits.values[].id" | grep "$commit")

  if [[ -n "$result" ]]; then
    return 0
  else
    return 1
  fi
}

# Loop through all refs being pushed
while read oldrev newrev refname; do
  # Extract the branch name from the refname
  branch_name=$(echo "$refname" | sed 's|refs/heads/||')

  # Check if the branch is protected
  if [[ "$branch_name" =~ $PROTECTED_BRANCHES_REGEX ]]; then
    # Get all new commits being pushed
    new_commits=$(git rev-list "$oldrev".."$newrev")

    for commit in $new_commits; do
      # Check if the commit is part of a pull request
      if ! is_commit_part_of_pull_request "$commit" "$branch_name"; then
        echo "Commit $commit is not part of a merged pull request. Push to $branch_name is denied."
        exit 1
      fi
    done
  fi
done

exit 0