param (
    [string]$originalContainer,
    [string]$newContainer
)

# Get environment variables
$envVarsArray = docker inspect --format='{{range $index, $value := .Config.Env}} -e "`"$value`"" {{end}}' $originalContainer
$envVars = $envVarsArray -join " "

# Get volume mounts
$volumesArray = docker inspect --format='{{range $index, $value := .HostConfig.Binds}} -v "`"$value`"" {{end}}' $originalContainer
$volumes = $volumesArray -join " "

# Get the image name
$image = docker inspect --format='{{.Config.Image}}' $originalContainer

# Run the new container interactively
docker run -it $envVars $volumes --name $newContainer $image /bin/bash



######### Usage:

.\run_interactive.ps1 -originalContainer "my_old_container" -newContainer "my_new_interactive_container"


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Styled Heading</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@700&display=swap" rel="stylesheet">
    <style>
        h1 {
            font-family: 'Poppins', sans-serif;
            font-size: 3.5em;
            font-weight: 700;
            color: #2d3436;
            letter-spacing: 2px;
            text-transform: uppercase;
            background: linear-gradient(135deg, #74b9ff, #a29bfe);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            text-align: center;
            position: relative;
            margin: 20px 0;
        }

        h1::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            width: 100%;
            height: 3px;
            background: #74b9ff;
            z-index: -1;
        }

        h1:hover {
            letter-spacing: 4px;
            transition: letter-spacing 0.3s ease-in-out;
        }
    </style>
</head>
<body>
    <h1>Platform</h1>
</body>
</html>


import pandas as pd
import matplotlib.pyplot as plt
from datetime import timedelta

# Read CSV file into a DataFrame
df = pd.read_csv('your_file.csv', parse_dates=['Started', 'Stopped'])

# Filter for rows where Id == 21
df_filtered = df[df['Id'] == 21]

# Create a time range from the earliest start time to the latest stop time
time_range = pd.date_range(start=df_filtered['Started'].min(), 
                           end=df_filtered['Stopped'].max(), freq='T')  # 'T' for minute frequency

# Create a DataFrame to store the number of active instances at each time step
active_instances = pd.DataFrame(index=time_range, columns=['ActiveInstances'])
active_instances['ActiveInstances'] = 0

# Iterate over the filtered DataFrame and mark active times
for _, row in df_filtered.iterrows():
    active_instances.loc[row['Started']:row['Stopped'], 'ActiveInstances'] += 1

# Plot the data
plt.figure(figsize=(10, 6))
plt.plot(active_instances.index, active_instances['ActiveInstances'], label='Active Instances')
plt.xlabel('Time')
plt.ylabel('Number of Active Instances')
plt.title('Number of Active Instances Over Time (Id = 21)')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

