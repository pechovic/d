using System;
using System.Collections.Generic;

// Define a custom attribute
[AttributeUsage(AttributeTargets.Property)]
public class CustomAttribute : Attribute
{
    public string Name { get; }

    public CustomAttribute(string name)
    {
        Name = name;
    }
}

// Define a class with properties decorated with the custom attribute
public class MyClass
{
    [Custom("Attribute 1")]
    public int Property1 { get; set; }

    [Custom("Attribute 2")]
    public string Property2 { get; set; }

    [Custom("Attribute 3")]
    public double Property3 { get; set; }
}

class Program
{
    static void Main(string[] args)
    {
        // Instantiate the class
        MyClass myObject = new MyClass();

        // Get all properties of the class
        var properties = typeof(MyClass).GetProperties();

        // Create a list to store attribute names
        List<string> attributeNames = new List<string>();

        // Iterate through each property and get its attributes
        foreach (var property in properties)
        {
            // Get all attributes of the property
            var attributes = property.GetCustomAttributes(typeof(CustomAttribute), false);

            // If the property has the custom attribute, add its name to the list
            if (attributes.Length > 0)
            {
                CustomAttribute customAttribute = (CustomAttribute)attributes[0];
                attributeNames.Add(customAttribute.Name);
            }
        }

        // Iterate through the list of attribute names
        foreach (var attributeName in attributeNames)
        {
            Console.WriteLine(attributeName);
        }
    }
}

body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    padding: 20px;
}

h2 {
    color: #333;
}

form {
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

label {
    font-weight: bold;
}

input[type="text"],
input[type="email"],
textarea {
    width: 100%;
    padding: 10px;
    margin: 5px 0;
    border: 1px solid #ccc;
    border-radius: 4px;
    box-sizing: border-box; /* Ensure that padding and border are included in the element's total width and height */
}

textarea {
    height: 100px; /* Set the height of the textarea */
}

input[type="submit"] {
    background-color: #007bff;
    color: #fff;
    padding: 10px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

input[type="submit"]:hover {
    background-color: #0056b3;
}

/* Optional: Style error messages */
.text-danger {
    color: #ff0000;
    font-size: 0.8em;
}


